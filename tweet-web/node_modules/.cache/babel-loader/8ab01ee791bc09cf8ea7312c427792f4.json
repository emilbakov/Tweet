{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useState } from 'react';\nimport { TweetList } from './list';\nimport { apiTweetCreate } from './lookup';\n\nfunction TweetCreate(props) {\n  const {\n    didTweet\n  } = props;\n  const textAreaRef = React.createRef();\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value;\n    console.log(newVal, 'new value');\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Tweet\"))));\n}\n\nexport function TweetComponent(props) {\n  console.log(props);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value;\n    console.log(newVal, 'new value');\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(TweetCreate, {\n    div: true,\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(TweetList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/components.js"],"names":["React","useState","TweetList","apiTweetCreate","TweetCreate","props","didTweet","textAreaRef","createRef","handleBackendUpdate","response","status","tempNewTweets","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetComponent","canTweet","newTweets","setNewTweets","unshift"],"mappings":"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","sourcesContent":["import React,{ useState} from 'react'\r\nimport {TweetList} from './list'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nfunction TweetCreate(props){\r\n    const {didTweet} =props    \r\n    const textAreaRef = React.createRef()    \r\n    const handleBackendUpdate =  (response,status) => {\r\n      if (status===201) {        \r\n        didTweet(tempNewTweets)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }       \r\n\r\n    }\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        console.log(event) \r\n        \r\n        const newVal = textAreaRef.current.value\r\n        \r\n        console.log(newVal, 'new value')\r\n        \r\n        apiTweetCreate(newVal,handleBackendUpdate)\r\n                \r\n        \r\n        textAreaRef.current.value='' \r\n    }\r\n\r\n    return <div className={props.className}>\r\n                <div className='col-12 mb-3'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n                        </textarea>\r\n                        <button type='submit' className='btn btn-primary my-3'>Tweet</button>    \r\n                    </form>\r\n                </div>          \r\n            </div>    \r\n}\r\n\r\nexport function TweetComponent(props) {\r\n    console.log(props)\r\n    \r\n    const canTweet =props.canTweet === \"false\" ? false : true    \r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets]= useState([])\r\n    const handleBackendUpdate =  (response,status) => {\r\n      let tempNewTweets =[...newTweets]\r\n      if (status===201) {\r\n        tempNewTweets.unshift(response)\r\n        setNewTweets(tempNewTweets)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }       \r\n\r\n    }\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        console.log(event) \r\n        \r\n        const newVal = textAreaRef.current.value\r\n        \r\n        console.log(newVal, 'new value')\r\n        \r\n        apiTweetCreate(newVal,handleBackendUpdate)\r\n                \r\n        \r\n        textAreaRef.current.value='' \r\n    }\r\n\r\n    return <div className={props.className}>\r\n                {canTweet === true &&<TweetCreate div className='col-12 mb-3' />}\r\n            <TweetList newTweets={newTweets} {...props} />\r\n        </div>    \r\n}\r\n  \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}