{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\list.js\";\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup';\nimport { Tweet } from './detail';\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    //Lookup\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = newTweet => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweetsInit(updateFinalTweets);\n  };\n\n  const handleLoadNext = event => {\n    event.preventDefault();\n\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      didRetweet: handleDidRetweet,\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    });\n  }), nextUrl !== null && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLoadNext,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }\n  }, \"Load next\"));\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/list.js"],"names":["React","useEffect","useState","apiTweetList","Tweet","TweetList","props","tweetsInit","setTweetsInit","tweets","setTweets","nextUrl","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","next","results","alert","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","handleLoadNext","event","preventDefault","handleLoadNextResponse","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,YAAR,QAA2B,UAA3B;AACA,SAAQC,KAAR,QAAoB,UAApB;AAGA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMc,KAAK,GAAG,CAAC,GAAGT,KAAK,CAACU,SAAV,EAAqBC,MAArB,CAA4BV,UAA5B,CAAd;;AACA,QAAGQ,KAAK,CAACG,MAAN,KAAiBT,MAAM,CAACS,MAA3B,EAAmC;AACjCR,MAAAA,SAAS,CAACK,KAAD,CAAT;AACD;AAEJ,GANQ,EAMN,CAACT,KAAK,CAACU,SAAP,EAAiBP,MAAjB,EAAwBF,UAAxB,CANM,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,QAAIY,YAAY,KAAI,KAApB,EAA2B;AAC3B,YAAMM,qBAAqB,GAAE,CAACC,QAAD,EAAUC,MAAV,KAAoB;AAC/C,YAAIA,MAAM,KAAG,GAAb,EAAiB;AACfT,UAAAA,UAAU,CAACQ,QAAQ,CAACE,IAAV,CAAV;AACAd,UAAAA,aAAa,CAACY,QAAQ,CAACG,OAAV,CAAb;AACAT,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD,SAJD,MAIM;AACJU,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,OARD;;AASArB,MAAAA,YAAY,CAACG,KAAK,CAACmB,QAAP,EAAgBN,qBAAhB,CAAZ;AACD;AACF,GAdQ,EAcN,CAACZ,UAAD,EAAYM,YAAZ,EAAyBC,eAAzB,EAAyCR,KAAK,CAACmB,QAA/C,CAdM,CAAT;;AAgBA,QAAMC,gBAAgB,GAAIC,QAAD,IAAY;AACnC,UAAMC,gBAAgB,GAAE,CAAC,GAAGrB,UAAJ,CAAxB;AACAqB,IAAAA,gBAAgB,CAACC,OAAjB,CAAyBF,QAAzB;AACAnB,IAAAA,aAAa,CAACoB,gBAAD,CAAb;AACA,UAAME,iBAAiB,GAAE,CAAC,GAAGrB,MAAJ,CAAzB;AACAqB,IAAAA,iBAAiB,CAACD,OAAlB,CAA0BpB,MAA1B;AACAD,IAAAA,aAAa,CAACsB,iBAAD,CAAb;AAED,GARD;;AASA,QAAMC,cAAc,GAAGC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGtB,OAAO,KAAK,IAAf,EAAoB;AAClB,YAAMuB,sBAAsB,GAAG,CAACd,QAAD,EAAWC,MAAX,KAAsB;AACnD,YAAIA,MAAM,KAAG,GAAb,EAAiB;AACfT,UAAAA,UAAU,CAACQ,QAAQ,CAACE,IAAV,CAAV;AACAd,UAAAA,aAAa,CAACY,QAAQ,CAACG,OAAV,CAAb;AACAT,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD,SAJD,MAIM;AACJU,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,OARD;;AASArB,MAAAA,YAAY,CAACG,KAAK,CAACmB,QAAP,EAAgBS,sBAAhB,EAAwCvB,OAAxC,CAAZ;AACD;AACF,GAdD;;AAeA,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBF,MAAM,CAAC0B,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/C,wBAAO,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAEX,gBAAnB;AAAqC,MAAA,KAAK,EAAEU,IAA5C;AAAkD,MAAA,SAAS,EAAC,qCAA5D;AAAkG,MAAA,GAAG,EAAI,GAAEC,KAAM,YAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAED,GAHuB,CAAjB,EAIL1B,OAAO,KAAK,IAAZ,iBAAoB;AAAS,IAAA,OAAO,EAAGoB,cAAnB;AAAmC,IAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJf,CAAP;AAMD","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\n\r\nexport function TweetList(props) {\r\n    const[tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets,setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if(final.length !== tweets.length) {\r\n          setTweets(final)\r\n        } \r\n  \r\n    }, [props.newTweets,tweets,tweetsInit])\r\n  \r\n    useEffect(()=>{\r\n        //Lookup\r\n        if (tweetsDidSet=== false) {\r\n        const handleTweetListLookup= (response,status) =>{      \r\n          if (status===200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else{\r\n            alert(\"There was an error\")\r\n          }      \r\n        }\r\n        apiTweetList(props.username,handleTweetListLookup)  \r\n      }\r\n    }, [tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n    \r\n    const handleDidRetweet = (newTweet)=>{\r\n      const updateTweetsInit =[...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets =[...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweetsInit(updateFinalTweets)\r\n  \r\n    }\r\n    const handleLoadNext= (event) => {\r\n      event.preventDefault()\r\n      if(nextUrl !== null){\r\n        const handleLoadNextResponse = (response ,status) => {\r\n          if (status===200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else{\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username,handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    return <React.Fragment>{tweets.map((item,index)=>{ \r\n      return <Tweet didRetweet={handleDidRetweet} tweet={item} className='my-5 py-5 border bg-white text-dark' key ={`${index}-{item.id}`}/>\r\n  \r\n    })}\r\n    { nextUrl !== null && <button  onClick ={handleLoadNext} className='btn btn-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}