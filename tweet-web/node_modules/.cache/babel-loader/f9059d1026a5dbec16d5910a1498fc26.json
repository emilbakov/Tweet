{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET';\n  const url = \"/tweets\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.send();\n}\n\nfunction App() {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const tweetItem = [{\n      \"content\": 123\n    }, {\n      \"content\": \"Hello WOrld\"\n    }];\n    setTweets(tweetItem);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, tweets.map((tweet, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }\n    }, tweet.content);\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/App.js"],"names":["React","useEffect","useState","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","send","App","tweets","setTweets","tweetItem","logo","map","tweet","index","content"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;AAEA,OAAO,WAAP;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,QAAMC,MAAM,GAAG,KAAf;AACA,QAAMC,GAAG,GAAG,SAAZ;AACA,QAAMC,YAAY,GAAG,MAArB;AACAJ,EAAAA,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;AACAH,EAAAA,GAAG,CAACM,MAAJ,GAAa,YAAW;AACtBP,IAAAA,QAAQ,CAACC,GAAG,CAACO,QAAL,EAAcP,GAAG,CAACQ,MAAlB,CAAR;AACD,GAFD;;AAGAR,EAAAA,GAAG,CAACS,IAAJ;AACD;;AAED,SAASC,GAAT,GAAe;AACb,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMiB,SAAS,GAAG,CAAC;AAAC,iBAAU;AAAX,KAAD,EAAiB;AAAC,iBAAU;AAAX,KAAjB,CAAlB;AACAD,IAAAA,SAAS,CAACC,SAAD,CAAT;AAED,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAOC,KAAP,KAAe;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,OAAX,CAAP;AAED,GAHA,CADH,CALF,CADF,CADF;AAgBD;;AAED,eAAeR,GAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest()\n  const method = 'GET'\n  const url = \"/tweets\"\n  const responseType = \"json\"\n  xhr.responseType = responseType\n  xhr.open(method, url)\n  xhr.onload = function() {\n    callback(xhr.response,xhr.status)            \n  }\n  xhr.send()    \n}\n\nfunction App() {\n  const[tweets, setTweets] = useState([])\n\n  useEffect(()=>{\n    const tweetItem = [{\"content\":123},{\"content\":\"Hello WOrld\"}]\n    setTweets(tweetItem)\n\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n          {tweets.map((tweet,index)=>{ \n            return <li>{tweet.content}</li>\n\n          })}\n        </p> \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}