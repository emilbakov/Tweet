{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetComponent(props) {\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Tweet\"));\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n  const display = action.type === 'like' ? `${likes} ${action.display}` : actionDisplay;\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  }, \" \", display, \" \");\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, tweet.id, \"-\", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like',\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'unlike',\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'retweet',\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n}\nexport function TweetList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    //Lookup\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    });\n  });\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetComponent","props","handleSubmit","event","preventDefault","console","log","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","className","actionDisplay","display","type","handleClick","Tweet","id","content","TweetList","tweets","setTweets","myCallback","response","status","alert","map","item","index"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\n\r\nimport {loadTweets} from '../lookup'\r\n\r\nexport function TweetComponent(props) {\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        console.log(event) \r\n    }\r\n    return <form onSubmit={handleSubmit}>\r\n        <textarea className='form-control' name='tweet'>\r\n        </textarea>\r\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>    \r\n    </form>\r\n}\r\n\r\nexport function ActionBtn(props){\r\n    const{tweet, action} = props\r\n    const [likes,setLikes] = useState(tweet.likes ? tweet.likes:0)\r\n    const[userLike, setUserLike] = useState(tweet.userLike === true ? true:false)\r\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display: 'Action'\r\n    const display = action.type ==='like'? `${likes} ${action.display}`: actionDisplay\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if (action.type ==='like') {\r\n            if(userLike === true) {\r\n                setLikes(likes-1)\r\n                setUserLike(false)\r\n            } else {\r\n                setLikes(likes+1)\r\n                setUserLike(true)\r\n            }\r\n            \r\n        }\r\n    }\r\n    return <button className={className} onClick= {handleClick}> {display} </button> \r\n  }\r\n  \r\n  \r\nexport function Tweet(props) {\r\n    const{tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>{tweet.id}-{tweet.content}</p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type:'like', display:\"Likes\"}}/>\r\n        <ActionBtn tweet={tweet} action={{type:'unlike', display:\"Unlike\"}}/>\r\n        <ActionBtn tweet={tweet} action={{type:'retweet', display:\"Retweet\"}}/>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n\r\nexport function TweetList(props) {\r\n  const[tweets, setTweets] = useState([])\r\n\r\n  useEffect(()=>{\r\n    //Lookup\r\n    const myCallback= (response,status) =>{      \r\n      if (status===200){\r\n        setTweets(response)\r\n      } else{\r\n        alert(\"There was an error\")\r\n      }      \r\n    }\r\n    loadTweets(myCallback)  \r\n\r\n  }, [])\r\n  return tweets.map((item,index)=>{ \r\n    return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key ={`${index}-{item.id}`}/>\r\n\r\n  })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}