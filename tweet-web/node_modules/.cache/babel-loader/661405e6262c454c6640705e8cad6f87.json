{"ast":null,"code":"function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==\"\"){var cookies=document.cookie.split(\";\");for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();// Does this cookie string begin with the name we want?\nif(cookie.substring(0,name.length+1)===name+\"=\"){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}export function backendLookup(method,endpoint,callback,data){var jsonData;if(data){jsonData=JSON.stringify(data);}var xhr=new XMLHttpRequest();var url=\"http://localhost:8000/api\".concat(endpoint);xhr.responseType=\"json\";var csrftoken=getCookie('csrftoken');xhr.open(method,url);xhr.setRequestHeader(\"Content-Type\",\"application/json\");if(csrftoken){xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");xhr.setRequestHeader(\"X-CSRFToken\",csrftoken);//xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n};xhr.onload=function(){if(xhr.status===403){var detail=xhr.response.detail;if(detail===\"Authentication credentials were not provided.\"){window.location.href=\"/login?showLoginReguired=true\";}}callback(xhr.response,xhr.status);};xhr.onerror=function(e){console.log(e);callback({message:\"The request was an error\"},400);};xhr.send(jsonData);}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/lookup/components.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","open","setRequestHeader","onload","status","detail","response","window","location","href","onerror","e","console","log","message","send"],"mappings":"AAAA,QAASA,CAAAA,SAAT,CAAmBC,IAAnB,CAAyB,CACvB,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIC,QAAQ,CAACC,MAAT,EAAmBD,QAAQ,CAACC,MAAT,GAAoB,EAA3C,CAA+C,CAC7C,GAAMC,CAAAA,OAAO,CAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,OAAO,CAACG,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACvC,GAAMH,CAAAA,MAAM,CAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAf,CACA;AACA,GAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAAoBT,IAAI,CAACO,MAAL,CAAc,CAAlC,IAAyCP,IAAI,CAAG,GAApD,CAAyD,CACvDC,WAAW,CAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,CAAc,CAA/B,CAAD,CAAhC,CACA,MACD,CACF,CACF,CACD,MAAON,CAAAA,WAAP,CACD,CAED,MAAO,SAASU,CAAAA,aAAT,CAAuBC,MAAvB,CAA+BC,QAA/B,CAAyCC,QAAzC,CAAmDC,IAAnD,CAAyD,CAC9D,GAAIC,CAAAA,QAAJ,CACA,GAAID,IAAJ,CAAU,CACRC,QAAQ,CAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX,CACD,CACD,GAAMI,CAAAA,GAAG,CAAG,GAAIC,CAAAA,cAAJ,EAAZ,CACA,GAAMC,CAAAA,GAAG,oCAA+BR,QAA/B,CAAT,CACAM,GAAG,CAACG,YAAJ,CAAmB,MAAnB,CACA,GAAMC,CAAAA,SAAS,CAAGxB,SAAS,CAAC,WAAD,CAA3B,CACAoB,GAAG,CAACK,IAAJ,CAASZ,MAAT,CAAiBS,GAAjB,EACAF,GAAG,CAACM,gBAAJ,CAAqB,cAArB,CAAqC,kBAArC,EAGA,GAAIF,SAAJ,CAAc,CAGZJ,GAAG,CAACM,gBAAJ,CAAqB,kBAArB,CAAyC,gBAAzC,EACAN,GAAG,CAACM,gBAAJ,CAAqB,aAArB,CAAoCF,SAApC,EACA;AACD,EACDJ,GAAG,CAACO,MAAJ,CAAa,UAAY,CACvB,GAAIP,GAAG,CAACQ,MAAJ,GAAe,GAAnB,CAAwB,CACtB,GAAMC,CAAAA,MAAM,CAAET,GAAG,CAACU,QAAJ,CAAaD,MAA3B,CACA,GAAGA,MAAM,GAAK,+CAAd,CAA8D,CAC9DE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,+BAAvB,CACC,CACF,CACDlB,QAAQ,CAACK,GAAG,CAACU,QAAL,CAAeV,GAAG,CAACQ,MAAnB,CAAR,CACD,CARD,CASAR,GAAG,CAACc,OAAJ,CAAc,SAAUC,CAAV,CAAa,CACzBC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACApB,QAAQ,CAAC,CAAEuB,OAAO,CAAE,0BAAX,CAAD,CAA0C,GAA1C,CAAR,CACD,CAHD,CAKAlB,GAAG,CAACmB,IAAJ,CAAStB,QAAT,EACD","sourcesContent":["function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    const cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n  \r\n  if (csrftoken){\r\n\r\n     \r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n  };\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail= xhr.response.detail\r\n      if(detail === \"Authentication credentials were not provided.\"){\r\n      window.location.href = \"/login?showLoginReguired=true\";\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    console.log(e);\r\n    callback({ message: \"The request was an error\" }, 400)\r\n  };\r\n  \r\n  xhr.send(jsonData)\r\n}\r\n  "]},"metadata":{},"sourceType":"module"}