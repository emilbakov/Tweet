{"ast":null,"code":"import _toConsumableArray from\"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiTweetList}from'./lookup';import{Tweet}from'./detail';export function TweetList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetsInit=_useState2[0],setTweetsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweets=_useState4[0],setTweets=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tweetsDidSet=_useState6[0],setTweetsDidSet=_useState6[1];useEffect(function(){var final=_toConsumableArray(props.newTweets).concat(tweetsInit);if(final.length!==tweets.length){setTweets(final);}},[props.newTweets,tweets,tweetsInit]);useEffect(function(){//Lookup\nif(tweetsDidSet===false){var handleTweetListLookup=function handleTweetListLookup(response,status){if(status===200){setTweetsInit(response);setTweetsDidSet(true);}else{alert(\"There was an error\");}};apiTweetList(props.username,handleTweetListLookup);}},[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newTweet){var updateTweetsInit=_toConsumableArray(tweetsInit);updateTweetsInit.unshift(newTweet);setTweetsInit(updateTweetsInit);var updateFinalTweets=_toConsumableArray(tweets);updateFinalTweets.unshift(tweets);setTweetsInit(updateFinalTweets);};return tweets.map(function(item,index){return/*#__PURE__*/React.createElement(Tweet,{didRetweet:handleDidRetweet,tweet:item,className:\"my-5 py-5 border bg-white text-dark\",key:\"\".concat(index,\"-{item.id}\")});});}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/list.js"],"names":["React","useEffect","useState","apiTweetList","Tweet","TweetList","props","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","alert","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index"],"mappings":"wTAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,CAAyBC,QAAzB,KAAwC,OAAxC,CACA,OAAQC,YAAR,KAA2B,UAA3B,CACA,OAAQC,KAAR,KAAoB,UAApB,CAGA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,eACMJ,QAAQ,CAAC,EAAD,CADd,wCACvBK,UADuB,eACXC,aADW,8BAEFN,QAAQ,CAAC,EAAD,CAFN,yCAEtBO,MAFsB,eAEfC,SAFe,8BAGWR,QAAQ,CAAC,KAAD,CAHnB,yCAGtBS,YAHsB,eAGRC,eAHQ,eAI7BX,SAAS,CAAC,UAAI,CACV,GAAMY,CAAAA,KAAK,CAAG,mBAAIP,KAAK,CAACQ,SAAV,EAAqBC,MAArB,CAA4BR,UAA5B,CAAd,CACA,GAAGM,KAAK,CAACG,MAAN,GAAiBP,MAAM,CAACO,MAA3B,CAAmC,CACjCN,SAAS,CAACG,KAAD,CAAT,CACD,CAEJ,CANQ,CAMN,CAACP,KAAK,CAACQ,SAAP,CAAiBL,MAAjB,CAAwBF,UAAxB,CANM,CAAT,CAQAN,SAAS,CAAC,UAAI,CACV;AACA,GAAIU,YAAY,GAAI,KAApB,CAA2B,CAC3B,GAAMM,CAAAA,qBAAqB,CAAE,QAAvBA,CAAAA,qBAAuB,CAACC,QAAD,CAAUC,MAAV,CAAoB,CAC/C,GAAIA,MAAM,GAAG,GAAb,CAAiB,CACfX,aAAa,CAACU,QAAD,CAAb,CACAN,eAAe,CAAC,IAAD,CAAf,CACD,CAHD,IAGM,CACJQ,KAAK,CAAC,oBAAD,CAAL,CACD,CACF,CAPD,CAQAjB,YAAY,CAACG,KAAK,CAACe,QAAP,CAAgBJ,qBAAhB,CAAZ,CACD,CACF,CAbQ,CAaN,CAACV,UAAD,CAAYI,YAAZ,CAAyBC,eAAzB,CAAyCN,KAAK,CAACe,QAA/C,CAbM,CAAT,CAeA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAY,CACnC,GAAMC,CAAAA,gBAAgB,oBAAMjB,UAAN,CAAtB,CACAiB,gBAAgB,CAACC,OAAjB,CAAyBF,QAAzB,EACAf,aAAa,CAACgB,gBAAD,CAAb,CACA,GAAME,CAAAA,iBAAiB,oBAAMjB,MAAN,CAAvB,CACAiB,iBAAiB,CAACD,OAAlB,CAA0BhB,MAA1B,EACAD,aAAa,CAACkB,iBAAD,CAAb,CAED,CARD,CAUA,MAAOjB,CAAAA,MAAM,CAACkB,GAAP,CAAW,SAACC,IAAD,CAAMC,KAAN,CAAc,CAC9B,mBAAO,oBAAC,KAAD,EAAO,UAAU,CAAEP,gBAAnB,CAAqC,KAAK,CAAEM,IAA5C,CAAkD,SAAS,CAAC,qCAA5D,CAAkG,GAAG,WAAMC,KAAN,cAArG,EAAP,CAED,CAHM,CAAP,CAKD","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\n\r\nexport function TweetList(props) {\r\n    const[tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets,setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if(final.length !== tweets.length) {\r\n          setTweets(final)\r\n        } \r\n  \r\n    }, [props.newTweets,tweets,tweetsInit])\r\n  \r\n    useEffect(()=>{\r\n        //Lookup\r\n        if (tweetsDidSet=== false) {\r\n        const handleTweetListLookup= (response,status) =>{      \r\n          if (status===200){\r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } else{\r\n            alert(\"There was an error\")\r\n          }      \r\n        }\r\n        apiTweetList(props.username,handleTweetListLookup)  \r\n      }\r\n    }, [tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n    \r\n    const handleDidRetweet = (newTweet)=>{\r\n      const updateTweetsInit =[...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets =[...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweetsInit(updateFinalTweets)\r\n  \r\n    }\r\n  \r\n    return tweets.map((item,index)=>{ \r\n      return <Tweet didRetweet={handleDidRetweet} tweet={item} className='my-5 py-5 border bg-white text-dark' key ={`${index}-{item.id}`}/>\r\n  \r\n    })\r\n  \r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}