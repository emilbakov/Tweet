{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET';\n  const url = \"http://localhost:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send();\n}\n\nfunction Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, tweet.id, \"-\", tweet.content));\n}\n\nfunction App() {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    //Lookup\n    const myCallback = (response, status) => {\n      console.log(response, status);\n\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: '${index}-{tweet.id}',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }\n    });\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/App.js"],"names":["React","useEffect","useState","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","Tweet","props","tweet","className","id","content","App","tweets","setTweets","myCallback","alert","logo","map","item","index"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest()\n  const method = 'GET'\n  const url = \"http://localhost:8000/api/tweets/\"\n  const responseType = \"json\"\n  xhr.responseType = responseType\n  xhr.open(method, url)\n  xhr.onload = function() {\n    callback(xhr.response,xhr.status)            \n  }\n  xhr.onerror = function(e){\n    console.log(e)\n    callback({\"message\":\"The request was an error\"},400)\n  }\n  xhr.send()    \n}\n\nfunction Tweet(props) {\n  const{tweet} = props\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  return <div className={className}>\n    <p>{tweet.id}-{tweet.content}</p>\n    \n  </div>\n}\n\nfunction App() {\n  const[tweets, setTweets] = useState([])\n\n  useEffect(()=>{\n    //Lookup\n    const myCallback= (response,status) =>{\n      console.log(response,status)\n      if (status===200){\n        setTweets(response)\n      } else{\n        alert(\"There was an error\")\n      }      \n    }\n    loadTweets(myCallback)\n    \n    \n\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          {tweets.map((item,index)=>{ \n            return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={'${index}-{tweet.id}'}/>\n\n          })}\n        </div> \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}