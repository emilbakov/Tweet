{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useState } from 'react';\nimport { TweetList } from './list';\nimport { TweetCreate } from './create';\nexport function TweetComponent(props) {\n  console.log(props);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleNewTweets = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(TweetCreate, {\n    didTweet: handleNewTweets,\n    div: true,\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(TweetList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/components.js"],"names":["React","useState","TweetList","TweetCreate","TweetComponent","props","console","log","canTweet","newTweets","setNewTweets","handleNewTweets","newTweet","tempNewTweets","unshift","className"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AAKA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,QAAQ,GAAEH,KAAK,CAACG,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAArD;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMU,eAAe,GAAKC,QAAD,IAAc;AACrC,QAAIC,aAAa,GAAE,CAAC,GAAGJ,SAAJ,CAAnB;AACAI,IAAAA,aAAa,CAACC,OAAd,CAAsBF,QAAtB;AACAF,IAAAA,YAAY,CAACG,aAAD,CAAZ;AACD,GAJD;;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAER,KAAK,CAACU,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIP,QAAQ,KAAK,IAAb,iBAAoB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEG,eAAvB;AAAwC,IAAA,GAAG,MAA3C;AAA4C,IAAA,SAAS,EAAC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,eAED,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEF;AAAtB,KAAqCJ,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFC,CAAP;AAIH","sourcesContent":["import React,{ useState} from 'react'\r\nimport {TweetList} from './list'\r\nimport {TweetCreate} from './create'\r\n\r\n\r\n\r\n\r\nexport function TweetComponent(props) {\r\n    console.log(props)\r\n    \r\n    const canTweet =props.canTweet === \"false\" ? false : true    \r\n    const [newTweets, setNewTweets]= useState([])\r\n    const handleNewTweets =  (newTweet) => {\r\n      let tempNewTweets =[...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)      \r\n    }   \r\n\r\n    return <div className={props.className}>\r\n              {canTweet === true &&<TweetCreate didTweet={handleNewTweets} div className='col-12 mb-3' />}\r\n          <TweetList newTweets={newTweets} {...props} />\r\n        </div>    \r\n}\r\n  \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}