{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport { apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetComponent(props) {\n  console.log(props);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value;\n    console.log(newVal, 'new value');\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })));\n}\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11 mx-auto p-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \"Retweet\"), /*#__PURE__*/React.createElement(Tweet, {\n    hideAction: true,\n    className: '',\n    tweet: tweet.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }))) : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet,\n    didRetweet,\n    hideAction\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, tweet.id, \"-\", tweet.content), /*#__PURE__*/React.createElement(ParentTweet, {\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), actionTweet && hideAction !== true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'like',\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'unlike',\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'retweet',\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n}\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    //Lookup\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = newTweet => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweetsInit(updateFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      didRetweet: handleDidRetweet,\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }\n    });\n  });\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/components.js"],"names":["React","useEffect","useState","ActionBtn","apiTweetCreate","apiTweetList","TweetComponent","props","console","log","canTweet","textAreaRef","createRef","newTweets","setNewTweets","handleBackendUpdate","response","status","tempNewTweets","unshift","alert","handleSubmit","event","preventDefault","newVal","current","value","className","ParentTweet","tweet","parent","Tweet","didRetweet","hideAction","actionTweet","setActionTweet","handlePerformAction","newActionTweet","id","content","type","display","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","username","handleDidRetweet","newTweet","updateTweetsInit","updateFinalTweets","map","item","index"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\nimport {apiTweetCreate,apiTweetList} from './lookup'\r\n\r\n\r\nexport function TweetComponent(props) {\r\n    console.log(props)\r\n    \r\n    const canTweet =props.canTweet === \"false\" ? false : true    \r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets]= useState([])\r\n    const handleBackendUpdate =  (response,status) => {\r\n      let tempNewTweets =[...newTweets]\r\n      if (status===201) {\r\n        tempNewTweets.unshift(response)\r\n        setNewTweets(tempNewTweets)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }       \r\n\r\n    }\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        console.log(event) \r\n        \r\n        const newVal = textAreaRef.current.value\r\n        \r\n        console.log(newVal, 'new value')\r\n        \r\n        apiTweetCreate(newVal,handleBackendUpdate)\r\n                \r\n        \r\n        textAreaRef.current.value='' \r\n    }\r\n\r\n    return <div className={props.className}>\r\n                {canTweet === true &&<div className='col-12 mb-3'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n                        </textarea>\r\n                        <button type='submit' className='btn btn-primary my-3'>Tweet</button>    \r\n                    </form>\r\n                </div>\r\n                }\r\n            <TweetList newTweets={newTweets} {...props} />\r\n    </div>    \r\n}\r\n  \r\nexport function ParentTweet(props) {\r\n  const{tweet} = props\r\n  return tweet.parent ? <div className='row'>\r\n  <div className='col-11 mx-auto p-3 border rounded'>\r\n    <p className='mb-0'>Retweet</p>\r\n    <Tweet hideAction className={''} tweet={tweet.parent} />       \r\n  </div>\r\n  </div> : null\r\n} \r\n\r\nexport function Tweet(props) {\r\n    const{tweet,didRetweet,hideAction} = props\r\n    const [actionTweet,setActionTweet]= useState (props.tweet ? props.tweet :null)\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if(status === 200) {\r\n        setActionTweet(newActionTweet)\r\n      } else if (status===201) {\r\n        if (didRetweet){\r\n          didRetweet(newActionTweet)\r\n        }\r\n\r\n      } \r\n      \r\n    }\r\n    \r\n    return <div className={className}>\r\n      <div>\r\n        <p>{tweet.id}-{tweet.content}</p>\r\n        <ParentTweet tweet={tweet} />\r\n      </div>\r\n      \r\n      {(actionTweet && hideAction !==true) &&<div className='btn btn-group'>\r\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like', display:\"Likes\"}}/>\r\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike', display:\"Unlike\"}}/>\r\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet', display:\"Retweet\"}}/>\r\n      </div>}\r\n    </div>\r\n  }\r\n\r\n\r\nexport function TweetList(props) {\r\n  const[tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets,setTweets] = useState([])\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if(final.length !== tweets.length) {\r\n        setTweets(final)\r\n      } \r\n\r\n  }, [props.newTweets,tweets,tweetsInit])\r\n\r\n  useEffect(()=>{\r\n      //Lookup\r\n      if (tweetsDidSet=== false) {\r\n      const handleTweetListLookup= (response,status) =>{      \r\n        if (status===200){\r\n          setTweetsInit(response)\r\n          setTweetsDidSet(true)\r\n        } else{\r\n          alert(\"There was an error\")\r\n        }      \r\n      }\r\n      apiTweetList(props.username,handleTweetListLookup)  \r\n    }\r\n  }, [tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n  \r\n  const handleDidRetweet = (newTweet)=>{\r\n    const updateTweetsInit =[...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets =[...tweets]\r\n    updateFinalTweets.unshift(tweets)\r\n    setTweetsInit(updateFinalTweets)\r\n\r\n  }\r\n\r\n  return tweets.map((item,index)=>{ \r\n    return <Tweet didRetweet={handleDidRetweet} tweet={item} className='my-5 py-5 border bg-white text-dark' key ={`${index}-{item.id}`}/>\r\n\r\n  })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}