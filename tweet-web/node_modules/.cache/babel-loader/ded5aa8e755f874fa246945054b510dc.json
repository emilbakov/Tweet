{"ast":null,"code":"import _wrapRegExp from \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapRegExp\";\nvar _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\detail.js\";\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\n\nfunction UserLink(props) {\n  const {\n    user,\n    includeFullName\n  } = props;\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\n\n  const handleUserLink = event => {\n    window.location.href = `/profile/${user.username}`;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, nameDisplay, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleUserLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"@\", user.username));\n}\n\nfunction UserPicture(props) {\n  const {\n    user\n  } = props;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, user.username[0]);\n}\n\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/React.createElement(Tweet, {\n    isRetweet: true,\n    retweeter: props.retweeter,\n    hideAction: true,\n    className: '',\n    tweet: tweet.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }\n  }) : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet,\n    didRetweet,\n    hideAction,\n    isRetweet,\n    retweeter\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} py-3 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match( /*#__PURE__*/_wrapRegExp(/([0-9]+)/, {\n    tweetid: 1\n  }));\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserPicture, {\n    user: tweet.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, isRetweet === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"small text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \"Retweet via \", /*#__PURE__*/React.createElement(UserLink, {\n    user: retweeter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 81\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, tweet.user.first_name, \" \", tweet.user.last_name, \" \", \"@\", tweet.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, tweet.content), /*#__PURE__*/React.createElement(ParentTweet, {\n    tweet: tweet,\n    retweeter: tweet.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, actionTweet && hideAction !== true && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'like',\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'unlike',\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'retweet',\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), isDetail === true ? null : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-primary\",\n    onClick: handleLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 40\n    }\n  }, \"View\")))));\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","UserLink","props","user","includeFullName","nameDisplay","first_name","last_name","handleUserLink","event","window","location","href","username","UserPicture","ParentTweet","tweet","parent","retweeter","Tweet","didRetweet","hideAction","isRetweet","actionTweet","setActionTweet","className","path","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","preventDefault","handlePerformAction","newActionTweet","status","content","type","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAyBF,KAA/B;AACA,QAAMG,WAAW,GAAGD,eAAe,KAAK,IAApB,GAA4B,GAAED,IAAI,CAACG,UAAW,IAAGH,IAAI,CAACI,SAAU,EAAhE,GAAoE,IAAxF;;AAEA,QAAMC,cAAc,GAAGC,KAAD,IAAS;AAC7BC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAsB,YAAWT,IAAI,CAACU,QAAS,EAA/C;AACD,GAFD;;AAGA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,WADH,eAEE;AAAM,IAAA,OAAO,EAAEG,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCL,IAAI,CAACU,QAAtC,CAFF,CADF;AAMD;;AAED,SAASC,WAAT,CAAqBZ,KAArB,EAA4B;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,sBAAO;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACNC,IAAI,CAACU,QAAL,CAAc,CAAd,CADM,CAAP;AAGD;;AAGD,OAAO,SAASE,WAAT,CAAqBb,KAArB,EAA4B;AAC/B,QAAK;AAACc,IAAAA;AAAD,MAAUd,KAAf;AACA,SAAOc,KAAK,CAACC,MAAN,gBAAe,oBAAC,KAAD;AAAO,IAAA,SAAS,MAAhB;AAAiB,IAAA,SAAS,EAAEf,KAAK,CAACgB,SAAlC;AAA6C,IAAA,UAAU,MAAvD;AAAwD,IAAA,SAAS,EAAE,EAAnE;AAAuE,IAAA,KAAK,EAAEF,KAAK,CAACC,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAAgH,IAAvH;AACD;AAED,OAAO,SAASE,KAAT,CAAejB,KAAf,EAAsB;AACzB,QAAK;AAACc,IAAAA,KAAD;AAAOI,IAAAA,UAAP;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA,SAA9B;AAAyCJ,IAAAA;AAAzC,MAAsDhB,KAA3D;AACA,QAAM,CAACqB,WAAD,EAAaC,cAAb,IAA8BzB,QAAQ,CAAEG,KAAK,CAACc,KAAN,GAAcd,KAAK,CAACc,KAApB,GAA2B,IAA7B,CAA5C;AACA,MAAIS,SAAS,GAAGvB,KAAK,CAACuB,SAAN,GAAkBvB,KAAK,CAACuB,SAAxB,GAAoC,yBAApD;AACAA,EAAAA,SAAS,GAAGH,SAAS,KAAK,IAAd,GAAsB,GAAEG,SAAU,sBAAlC,GAA0DA,SAAtE;AACA,QAAMC,IAAI,GAAGhB,MAAM,CAACC,QAAP,CAAgBgB,QAA7B;AACA,QAAMC,KAAK,GAAEF,IAAI,CAACE,KAAL,2BAAW,UAAX;AAAA;AAAA,KAAb;AACA,QAAMC,UAAU,GAAGD,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAaC,OAAhB,GAA0B,CAAC,CAAnD;AAEA,QAAMC,QAAQ,GAAG,GAAEhB,KAAK,CAACiB,EAAG,EAAZ,KAAiB,GAAEJ,UAAW,EAA9C;;AACA,QAAMK,UAAU,GAAIzB,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAAC0B,cAAN;AACAzB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,IAAGI,KAAK,CAACiB,EAAG,EAAnC;AAED,GAJD;;AAMA,QAAMG,mBAAmB,GAAG,CAACC,cAAD,EAAiBC,MAAjB,KAA4B;AACtD,QAAGA,MAAM,KAAK,GAAd,EAAmB;AACjBd,MAAAA,cAAc,CAACa,cAAD,CAAd;AACD,KAFD,MAEO,IAAIC,MAAM,KAAG,GAAb,EAAkB;AACvB,UAAIlB,UAAJ,EAAe;AACbA,QAAAA,UAAU,CAACiB,cAAD,CAAV;AACD;AAEF;AAEF,GAVD;;AAYA,sBAAO;AAAK,IAAA,SAAS,EAAEZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAET,KAAK,CAACb,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,eAMC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCmB,SAAS,KAAI,IAAb,iBAAqB;AAAM,IAAA,SAAS,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgD,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhD,CADtB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACb,IAAN,CAAWG,UADd,EAC0B,GAD1B,EAEGU,KAAK,CAACb,IAAN,CAAWI,SAFd,EAEyB,GAFzB,OAGIS,KAAK,CAACb,IAAN,CAAWU,QAHf,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAK,CAACuB,OAAV,CAPF,eASE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEvB,KAApB;AAA2B,IAAA,SAAS,EAAEA,KAAK,CAACb,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,eAaE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEoB,WAAW,IAAIF,UAAU,KAAI,IAA9B,iBAAuC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACtC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,WAAlB;AAA+B,IAAA,gBAAgB,EAAEa,mBAAjD;AAAsE,IAAA,MAAM,EAAE;AAACI,MAAAA,IAAI,EAAC,MAAN;AAAcC,MAAAA,OAAO,EAAC;AAAtB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsC,eAEtC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAElB,WAAlB;AAA+B,IAAA,gBAAgB,EAAEa,mBAAjD;AAAsE,IAAA,MAAM,EAAE;AAACI,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,OAAO,EAAC;AAAxB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFsC,eAGtC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAElB,WAAlB;AAA+B,IAAA,gBAAgB,EAAEa,mBAAjD;AAAsE,IAAA,MAAM,EAAE;AAACI,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,OAAO,EAAC;AAAzB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHsC,CAFxC,EAQGT,QAAQ,KAAK,IAAb,GAAoB,IAApB,gBAA0B;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEE,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAR7B,CAbF,CAND,CADM,CAAP;AAiCD","sourcesContent":["import React,{useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\n\r\nfunction UserLink(props) {\r\n  const {user, includeFullName}= props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\r\n\r\n  const handleUserLink =(event)=>{\r\n    window.location.href=`/profile/${user.username}`\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}       \r\n      <span onClick={handleUserLink}>@{user.username}</span>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction UserPicture(props) {\r\n  const {user} = props\r\n  return <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n  {user.username[0]}\r\n  </span>\r\n}\r\n  \r\n\r\nexport function ParentTweet(props) {\r\n    const{tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideAction className={''} tweet={tweet.parent} /> : null\r\n  } \r\n  \r\n  export function Tweet(props) {\r\n      const{tweet,didRetweet,hideAction, isRetweet, retweeter} = props\r\n      const [actionTweet,setActionTweet]= useState (props.tweet ? props.tweet :null)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} py-3 border rounded` : className\r\n      const path = window.location.pathname\r\n      const match= path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n\r\n      const isDetail= `${tweet.id}`===`${urlTweetId}`\r\n      const handleLink = (event) =>{\r\n        event.preventDefault()\r\n        window.location.href =`/${tweet.id}`\r\n\r\n      }\r\n\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if(status === 200) {\r\n          setActionTweet(newActionTweet)\r\n        } else if (status===201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n  \r\n        } \r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n       <div className='d-flex'>\r\n        <div className=''>\r\n          <UserPicture user={tweet.user} />\r\n          \r\n\r\n        </div>\r\n        <div className='col-11'>\r\n          <div>\r\n          {isRetweet=== true && <span className ='small text-muted'>Retweet via <UserLink user={retweeter} /></span>}\r\n            <p>\r\n              {tweet.user.first_name}{\" \"}\r\n              {tweet.user.last_name}{\" \"}\r\n              @{tweet.user.username}\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n            \r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n          </div>\r\n          \r\n          <div className='btn btn-group px-0'>\r\n          \r\n          {(actionTweet && hideAction !==true) && <React.Fragment>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like', display:\"Likes\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike', display:\"Unlike\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet', display:\"Retweet\"}}/>\r\n          </React.Fragment>\r\n          }  \r\n            {isDetail === true ? null :<button className='btn btn-outline-primary' onClick={handleLink}>View</button>}\r\n          </div>\r\n      </div>  \r\n     </div>\r\n     </div> \r\n    }"]},"metadata":{},"sourceType":"module"}