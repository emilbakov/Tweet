{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createTweet, loadTweets } from '../lookup';\nexport function TweetComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    createTweet(newVal, (response, status) => {\n      if (status === 201) {\n        tempNewTweets.unshift(response);\n      }\n    });\n    console.log(newVal);\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n  const display = action.type === 'like' ? `${likes} ${action.display}` : actionDisplay;\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  }, \" \", display, \" \");\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, tweet.id, \"-\", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like',\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'unlike',\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'retweet',\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    //Lookup\n    if (tweetsDidSet === false) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      loadTweets(myCallback);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }\n    });\n  });\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/components.js"],"names":["React","useEffect","useState","createTweet","loadTweets","TweetComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","console","log","newVal","current","value","tempNewTweets","response","status","unshift","className","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","actionDisplay","display","type","handleClick","Tweet","id","content","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","myCallback","alert","map","item","index"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\n\r\nimport {createTweet,loadTweets} from '../lookup'\r\n\r\n\r\nexport function TweetComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets]= useState([])\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        console.log(event) \r\n        \r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTweets =[...newTweets]\r\n        createTweet(newVal,(response,status)=>{\r\n          if (status===201) {\r\n            tempNewTweets.unshift(response)\r\n          }         \r\n\r\n        })\r\n        \r\n        console.log(newVal)\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value='' \r\n    }\r\n    return <div className={props.className}>\r\n                <div className='col-12 mb-3'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n                        </textarea>\r\n                        <button type='submit' className='btn btn-primary my-3'>Tweet</button>    \r\n                    </form>\r\n                </div>\r\n            <TweetList newTweets={newTweets}/>\r\n    </div>    \r\n}\r\n\r\nexport function ActionBtn(props){\r\n    const{tweet, action} = props\r\n    const [likes,setLikes] = useState(tweet.likes ? tweet.likes:0)\r\n    const[userLike, setUserLike] = useState(tweet.userLike === true ? true:false)\r\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display: 'Action'\r\n    const display = action.type ==='like'? `${likes} ${action.display}`: actionDisplay\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if (action.type ==='like') {\r\n            if(userLike === true) {\r\n                setLikes(likes-1)\r\n                setUserLike(false)\r\n            } else {\r\n                setLikes(likes+1)\r\n                setUserLike(true)\r\n            }\r\n            \r\n        }\r\n    }\r\n    return <button className={className} onClick= {handleClick}> {display} </button> \r\n  }\r\n  \r\n  \r\nexport function Tweet(props) {\r\n    const{tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>{tweet.id}-{tweet.content}</p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type:'like', display:\"Likes\"}}/>\r\n        <ActionBtn tweet={tweet} action={{type:'unlike', display:\"Unlike\"}}/>\r\n        <ActionBtn tweet={tweet} action={{type:'retweet', display:\"Retweet\"}}/>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n\r\nexport function TweetList(props) {\r\n  const[tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets,setTweets] = useState([])\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if(final.length !== tweets.length) {\r\n        setTweets(final)\r\n      } \r\n\r\n  }, [props.newTweets,tweets,tweetsInit])\r\n\r\n  useEffect(()=>{\r\n      //Lookup\r\n      if (tweetsDidSet=== false) {\r\n      const myCallback= (response,status) =>{      \r\n        if (status===200){\r\n          setTweetsInit(response)\r\n          setTweetsDidSet(true)\r\n        } else{\r\n          alert(\"There was an error\")\r\n        }      \r\n      }\r\n      loadTweets(myCallback)  \r\n    }\r\n  }, [tweetsInit,tweetsDidSet,setTweetsDidSet])\r\n  return tweets.map((item,index)=>{ \r\n    return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key ={`${index}-{item.id}`}/>\r\n\r\n  })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}