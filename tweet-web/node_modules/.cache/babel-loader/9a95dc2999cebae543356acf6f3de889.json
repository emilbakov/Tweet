{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\Tweetme\\\\tweet-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useEffect, useState } from 'react';\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  return action.type === 'like' ? /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 34\n    }\n  }, \" \", tweet.likes, \" Likes\") : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, tweet.id, \"-\", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n}\nexport function loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET';\n  const url = \"http://localhost:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send();\n}\nexport function TweetList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    //Lookup\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  });\n}","map":{"version":3,"sources":["D:/test/Tweetme/tweet-web/src/tweets/components.js"],"names":["React","useEffect","useState","ActionBtn","props","tweet","action","className","type","likes","Tweet","id","content","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","TweetList","tweets","setTweets","myCallback","alert","map","item","index"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\n\r\nexport function ActionBtn(props){\r\n    const{tweet, action} = props\r\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\r\n    return action.type==='like' ?<button className={className} > {tweet.likes} Likes</button> : null\r\n  }\r\n  \r\n  \r\nexport function Tweet(props) {\r\n    const{tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>{tweet.id}-{tweet.content}</p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type:'like'}}/>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\nexport function loadTweets(callback) {\r\n  const xhr = new XMLHttpRequest()\r\n  const method = 'GET'\r\n  const url = \"http://localhost:8000/api/tweets/\"\r\n  const responseType = \"json\"\r\n  xhr.responseType = responseType\r\n  xhr.open(method, url)\r\n  xhr.onload = function() {\r\n    callback(xhr.response,xhr.status)            \r\n  }\r\n  xhr.onerror = function(e){\r\n    console.log(e)\r\n    callback({\"message\":\"The request was an error\"},400)\r\n  }\r\n  xhr.send()    \r\n}\r\n\r\nexport function TweetList(props) {\r\n  const[tweets, setTweets] = useState([])\r\n\r\n  useEffect(()=>{\r\n    //Lookup\r\n    const myCallback= (response,status) =>{      \r\n      if (status===200){\r\n        setTweets(response)\r\n      } else{\r\n        alert(\"There was an error\")\r\n      }      \r\n    }\r\n    loadTweets(myCallback)  \r\n\r\n  }, [])\r\n  return tweets.map((item,index)=>{ \r\n    return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key ={`${index}-{item.id}`}/>\r\n\r\n  })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}